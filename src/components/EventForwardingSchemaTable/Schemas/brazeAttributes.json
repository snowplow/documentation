{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "_update_existing_only": {
      "type": "boolean",
      "description": "If `true`, API requests will only update existing user profiles in Braze. `false` recommended.",
      "consoleDefault": "false",
      "consoleRequired": false
    },
    "user_alias": {
      "type": "object",
      "properties": {
        "alias_name": {
          "type": "string",
          "description": "The actual value of the alias identifier."
        },
        "alias_label": {
          "type": "string",
          "description": "Indicates the type of alias. E.g. `domain_userid`."
        }
      },
      "description": "Braze user alias object.",
      "required": ["alias_name", "alias_label"],
      "additionalProperties": false,
      "consoleRequired": false
    },
    "external_id": {
      "type": "string",
      "minLength": 1,
      "maxLength": 988,
      "description": "A unique user identifier. Required if `user alias`, `braze_id`, `email`, or `phone` is not provided.",
      "consoleDefault": "event?.user_id",
      "consoleRequired": false
    },
    "braze_id": {
      "type": "string",
      "description": "Identifier reserved for the Braze SDK. Required if `external_id`, `user alias`, `email`, or `phone` is not provided. Not recommended for use with the Snowplow integration.",
      "consoleRequired": false
    },
    "country": {
      "type": "string",
      "description": "ISO-3166-1 alpha-2 standard standard country code. Where the value does not meet that standard, Braze attempts to map it to a country. Where it cannot, the value will be NULL.",
      "consoleDefault": "event?.geo_country",
      "consoleRequired": false
    },
    "current_location": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Longitude of the user's location."
        },
        "latitude": {
          "type": "number",
          "description": "Latitude of the user's location."
        }
      },
      "consoleRequired": false
    },
    "date_of_first_session": {
      "type": "string",
      "format": "date-time",
      "description": "Date at which the user first used the app. Must be ISO 8601 format.",
      "consoleRequired": false
    },
    "date_of_last_session": {
      "type": "string",
      "format": "date-time",
      "description": "Date at which the user most recently used the app. Must be ISO 8601 format.",
      "consoleRequired": false
    },
    "dob": {
      "type": "string",
      "format": "date",
      "description": "The user's date of birth.",
      "consoleRequired": false
    },
    "email": {
      "type": "string",
      "format": "email",
      "minLength": 1,
      "maxLength": 75,
      "description": "The user's email address.",
      "consoleRequired": false
    },
    "email_subscribe": {
      "type": "string",
      "description": "The user's email subscription status.",
      "enum": ["opted_in", "unsubscribed", "subscribed"],
      "consoleRequired": false
    },
    "email_open_tracking_disabled": {
      "type": "boolean",
      "description": "Set to true to disable the open tracking pixel from being added to all future emails sent to this user.",
      "consoleRequired": false
    },
    "email_click_tracking_disabled": {
      "type": "boolean",
      "description": "Set to true to disable the click tracking for all links within future emails sent to this user.",
      "consoleRequired": false
    },
    "first_name": {
      "type": "string",
      "minLength": 1,
      "description": "User's first name.",
      "consoleRequired": false
    },
    "gender": {
      "type": "string",
      "description": "The user's gender.",
      "enum": ["M", "F", "O", "N", "P", null],
      "consoleRequired": false
    },
    "home_city": {
      "type": "string",
      "description": "The user's city.",
      "minLength": 1,
      "consoleRequired": false
    },
    "language": {
      "type": "string",
      "description": "The user's preferred language. Must be an ISO-639-1 standard language code.",
      "consoleDefault": "event?.br_lang",
      "consoleRequired": false
    },
    "last_name": {
      "type": "string",
      "minLength": 1,
      "description": "User's last name.",
      "consoleRequired": false
    },
    "marked_email_as_spam_at": {
      "type": "string",
      "format": "date-time",
      "description": "Date at which the userâ€™s email was marked as spam. Must be ISO 8601 format.",
      "consoleRequired": false
    },
    "phone": {
      "type": "string",
      "description": "The user's phone number.",
      "consoleRequired": false
    },
    "push_subscribe": {
      "type": "string",
      "description": "The user's push message subscription status.",
      "enum": ["opted_in", "unsubscribed", "subscribed"],
      "consoleRequired": false
    },
    "push_tokens": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "device_id": {
            "type": "string"
          }
        }
      },
      "description": "Array of objects with app_id and token string.",
      "consoleRequired": false
    },
    "time_zone": {
      "type": "string",
      "description": "The user's time zone. Must be a valid IANA Time Zone.",
      "consoleDefault": "event?.geo_timezone",
      "consoleRequired": false
    }
  },
  "anyOf": [
    {
      "oneOf": [
        {
          "required": ["external_id"]
        },
        {
          "required": ["user_alias"]
        },
        {
          "required": ["braze_id"]
        }
      ]
    },
    {
      "required": ["phone"]
    },
    {
      "required": ["email"]
    }
  ],
  "additionalProperties": true
}
